"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const jet_validator_1 = __importDefault(require("jet-validator"));
const Paths_1 = __importDefault(require("../constants/Paths"));
const Area_1 = __importDefault(require("src/models/Area"));
const Jefe_1 = __importDefault(require("src/models/Jefe"));
const AreaRoutes_1 = __importDefault(require("./AreaRoutes"));
const JefeRoutes_1 = __importDefault(require("./JefeRoutes"));
const Personal_1 = __importDefault(require("src/models/Personal"));
const PersonalRoutes_1 = __importDefault(require("./PersonalRoutes"));
const apiRouter = (0, express_1.Router)(), validate = (0, jet_validator_1.default)();
const areaRouter = (0, express_1.Router)();
areaRouter.get(Paths_1.default.Areas.Get, AreaRoutes_1.default.getAll);
areaRouter.post(Paths_1.default.Areas.Add, validate(['area', Area_1.default.isArea]), AreaRoutes_1.default.add);
areaRouter.put(Paths_1.default.Areas.Update, validate(['area', Area_1.default.isArea]), AreaRoutes_1.default.update);
areaRouter.delete(Paths_1.default.Areas.Delete, validate(['id', 'number', 'params']), AreaRoutes_1.default.delete);
apiRouter.use(Paths_1.default.Areas.Base, areaRouter);
const jefeRouter = (0, express_1.Router)({ mergeParams: true });
jefeRouter.get(Paths_1.default.Jefes.Get, validate(['idA', 'number', 'params']), JefeRoutes_1.default.getAll);
jefeRouter.post(Paths_1.default.Jefes.Add, validate(['jefe', Jefe_1.default.isJefe]), JefeRoutes_1.default.add);
jefeRouter.put(Paths_1.default.Jefes.Update, validate(['jefe', Jefe_1.default.isJefe]), JefeRoutes_1.default.update);
jefeRouter.delete(Paths_1.default.Jefes.Delete, validate(['id', 'number', 'params']), JefeRoutes_1.default.delete);
apiRouter.use(Paths_1.default.Jefes.Base, jefeRouter);
const personalRouter = (0, express_1.Router)({ mergeParams: true });
personalRouter.get(Paths_1.default.Personales.Get, PersonalRoutes_1.default.getAll);
personalRouter.post(Paths_1.default.Personales.Add, validate(['personal', Personal_1.default.isPersonal]), PersonalRoutes_1.default.add);
personalRouter.put(Paths_1.default.Personales.Update, validate(['personal', Personal_1.default.isPersonal]), PersonalRoutes_1.default.update);
personalRouter.delete(Paths_1.default.Personales.Delete, validate(['id', 'number', 'params']), PersonalRoutes_1.default.delete);
apiRouter.use(Paths_1.default.Personales.Base, personalRouter);
exports.default = apiRouter;
